"""1. Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6.
 Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака."""

n1 = 5
n2 = 6

'''"И" оператор, копирует бит в результат только если бит присутствует
в обоих операндах.'''
bit_and = n1 & n2

'''"ИЛИ" оператор копирует бит, если тот присутствует в хотя бы в одном операнде.'''
bit_or = n1 | n2

'''"Исключительное ИЛИ" оператор копирует бит только если бит присутствует
в одном из операндов, но не в обоих сразу.'''
bit_xor = n1 ^ n2

'''Побитовое отрицание меняет биты на обратные, там где была единица
становиться ноль и наоборот.'''
bit_not_n1 = ~n1
bit_not_n2 = ~n2

'''Побитовый сдвиг вправо. Значение левого операнда "сдвигается" вправо
на количество бит указанных в правом операнде. Для положительных чисел битовый 
сдвиг числа вправо на n равносилен целочисленному делению на 2n. 
Для отрицательных чисел в языке Питон операции битового сдвига неприменимы.'''
bit_shift_right = n1 >> 2

'''Побитовый сдвиг влево. Значение левого операнда "сдвигается" влево
на количество бит указанных в правом операнде. Битовый сдвиг влево на n бит равносилен (для положительных чисел) умножению на 2n.'''
bit_shift_left = n1 << 2

print(f'Бинарное представление чисел:\n{n1} : {bin(n1)}\n{n2} : {bin(n2)}')

print(f'Побитовое И (AND): {bin(n1)} & {bin(n2)} = {bin(bit_and)} ({bit_and})')

print(f'Побитовое ИЛИ (OR): {bin(n1)} | {bin(n2)} = {bin(bit_or)} ({bit_or})')

print(f"Исключающее ИЛИ (XOR): {bin(n1)} ^ {bin(n2)} = {bin(bit_xor)} ({bit_xor})")

print(f"Побитовое отрицание (NOT): ~{bin(n1)} = {bin(bit_not_n1)} ({bit_not_n1}), ~{bin(n2)} = {bin(bit_not_n2)} ({bit_not_n2})")

print(f"Побитовый сдвиг вправо на два знака: {bin(n1)} >> 2 = {bin(bit_shift_right)} ({bit_shift_right})")

print(f"Побитовый сдвиг влево на два знака: {bin(n1)} << 2 = {bin(bit_shift_left)} ({bit_shift_left})")